---
import type { Parsed } from "../lib/parse";

const { key, level, timed, finished, time, players, url } =
  Astro.props as Parsed;

const keyExecution = timed ? "pass" : finished ? "fail" : "left";
---

<div class="row">
  <div>
    <a class={keyExecution} href={url}>
      {level} - {key} - {time === "00:00" ? "xx:xx" : time}
    </a>
  </div>

  <div class="players">
    {
      players.map((p, i) => (
        <span class={p.type.toLowerCase()}>
          {p.name}
          {i < players.length - 1 ? " " : ""}{" "}
        </span>
      ))
    }
  </div>
</div>

<style>
  .row {
    display: flex;
    flex-direction: row;
    justify-content: space-between;

    padding-bottom: 5px;
  }
  a {
    color: inherit;
    text-decoration: none;
  }

  .pass {
    color: green;
  }
  .fail {
    color: darkred;
  }
  .left {
    color: darkred;
    text-decoration: line-through;
  }

  .players {
    color: #f4ebd0;
    font-size: 0.8em;
    margin-top: auto;
    margin-bottom: auto;
  }

  .deathknight {
    color: #c41e3a;
  }

  .demonhunter {
    color: #a330c9;
  }

  .druid {
    color: #ff7c0a;
  }

  .evoker {
    color: #33937f;
  }

  .hunter {
    color: #aad372;
  }

  .mage {
    color: #3fc7eb;
  }

  .monk {
    color: #00ff98;
  }

  .paladin {
    color: #f48cba;
  }

  .priest {
    color: #ffffff;
  }

  .rogue {
    color: #fff468;
  }

  .shaman {
    color: #0070dd;
  }

  .warlock {
    color: #8788ee;
  }

  .warrior {
    color: #c69b6d;
  }
</style>
